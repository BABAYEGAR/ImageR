@model Image.Models.Entities.Image
@{
    Layout = "Layout/Dashboard/_LayoutForm";
    ViewBag.PageTitle = "Upload Image";
    //ViewBag.PageHeader = "Image Upload";
    ViewBag.FormHeader = "Upload an Image (Make sure to fill all compulsory fields *)";
}
@section css{

    <!-- Bootstrap Markdown-->
    <link rel="stylesheet" type="text/css" href="~/Dashboard/plugins/bootstrap-markdown/css/bootstrap-markdown.min.css">
    <link href="~/Dashboard/assets/selectize/dist/css/selectize.css" rel="stylesheet"/>
    <style>
        .fileinput-upload-button {
            visibility: hidden
        }
        .page-header {
            padding: 0px;
        }
        .selectize-input {
            border: 0px solid #d0d0d0;
            padding: 0px 0px; 
            width: 100%;
            font-weight: bolder;
        }
    </style>
}
@section Breadcrumbs
    {
    <div class="pull-left">
        <h4 class="mt-0 mb-5">@ViewBag.PageHeader</h4>
        <ol class="breadcrumb mb-0">
            <li><a href="@Url.Action("Dashboard","Home")">Dashboard</a></li>
            <li><a href="@Url.Action("Index")">Images</a></li>
            <li class="active">@ViewBag.PageHeader</li>
        </ol>
    </div>
}
<div class="widget-body">
<h3>
   <span class="required">*</span> Make sure to <strong class="annouce">upload an Image</strong>  in the <strong class="required">next tab</strong> ..
</h3>
    <h3>
    <span class="required">*</span> Note That the <strong class="annouce">Maximum Size</strong> for Image Uploads is <strong class="required">15MB</strong>..
    </h3>
<div role="tabpanel">
<ul role="tablist" class="nav nav-tabs nav-justified mb-15">
    <li role="presentation" class="active">
        <a id="home-tab5" href="#home5" role="tab" data-toggle="tab" aria-controls="home5" aria-expanded="true"><h3>Image Details</h3>(Enter Image Details)</a>
    </li>
    <li role="presentation">
        <a id="profile-tab5" href="#profile5" role="tab" data-toggle="tab" aria-controls="profile5" aria-expanded="False"><h3>Image Upload</h3> (Click to upload image)</a>
    </li>
</ul>

@using (Html.BeginForm("Create", "Image", FormMethod.Post, new {enctype = "multipart/form-data", role = "form"}))
{
    <div class="tab-content">

    <div id="home5" role="tabpanel" aria-labelledby="home-tab5" class="tab-pane fade active in">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="form-body">
            <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Title, new {@class = "control-label"})<span class="required">*</span>
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control", placeholder = "Please enter the category name"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Theme, new {@class = "control-label"})<span class="required">*</span>
                @Html.EditorFor(model => model.Theme, new {htmlAttributes = new {@class = "form-control", placeholder = "Please enter the category name"}})
                @Html.ValidationMessageFor(model => model.Theme, "", new {@class = "text-danger"})
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ImageCategoryId, new {@class = "control-label"})<span class="required">*</span>
                @Html.DropDownListFor(model => model.ImageCategoryId, null, "Select an Image Category/Genre", new {@class = "form-control", placeholder = "", id = "category"})
                @Html.ValidationMessageFor(model => model.ImageCategoryId, "", new {@class = "text-danger"})
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ImageSubCategoryId, new {@class = "control-label"})
                @Html.DropDownListFor(m => m.ImageSubCategoryId, new SelectList(string.Empty, "Value", "Text"), "--Please select a Sub-Category/ Sub-Genre--", new {@class = "form-control", id = "sub"})
                @Html.ValidationMessageFor(model => model.ImageSubCategoryId, "", new {@class = "text-danger"})
            </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.LocationId, new {@class = "control-label"})<span class="required">*</span>
                    @Html.DropDownListFor(model => model.LocationId, null, "Select an Image Location", new {@class = "form-control", placeholder = ""})
                    @Html.ValidationMessageFor(model => model.LocationId, "", new {@class = "text-danger"})
                </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Inspiration, new {@class = "control-label"})<span class="required">*</span>
                @Html.EditorFor(model => model.Inspiration, new {htmlAttributes = new {@class = "form-control", placeholder = "Please enter the your inspiration for taking the image"}})
                @Html.ValidationMessageFor(model => model.Inspiration, "", new {@class = "text-danger"})
            </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.CameraId, new {@class = "control-label"})
                    @Html.DropDownListFor(model => model.CameraId, null, "Select the Camera Used", new {@class = "form-control", placeholder = ""})
                    @Html.ValidationMessageFor(model => model.CameraId, "", new {@class = "text-danger"})
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.SellingPrice, new {@class = "control-label"})<span class="required">*</span>
                    @Html.EditorFor(model => model.SellingPrice, new {htmlAttributes = new {@class = "form-control", placeholder = "Please enter the selling price for the image"}})
                    @Html.ValidationMessageFor(model => model.SellingPrice, "", new {@class = "text-danger"})
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Tags, new {@class = "control-label"})
                    @Html.EditorFor(model => model.Tags, new {htmlAttributes = new {@class = "form-control", placeholder = "Please enter the tags for the image", id = "input-tags" } })
                    @Html.ValidationMessageFor(model => model.Tags, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, new {@class = "control-label"})<span class="required">*</span>
                    <textarea name="Description" data-provide="markdown" rows="10"></textarea>
                    @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                </div>
            </div>

        </div>

    </div>
    <div id="profile5" role="tabpanel" aria-labelledby="profile-tab5" class="tab-pane fade">
        <div class="form-group">
            <br/>
            <br/>
            <label class="col-sm-2 control-label">Image Upload</label>
            <div class="col-sm-10">
                
                <input id="input-5" name="file" type="file" multiple="" class="file-loading" required="required">
                <p class="help-block">Initialize file input widget via javascript. Hide the caption and display widget with only buttons. You can add the <code>file-loading</code> class to show a spinning indicator, while the plugin loads.
                </p>
            </div>
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">
            <i class="glyphicon glyphicon-upload"></i>
            Submit
        </button>
        <a href="@Url.Action("Index", "Image")" class="btn btn-default">Cancel</a>
    </div>


    </div>
}
    </div >

</div>
    
@section Scripts
{
    <!-- Bootstrap Markdown-->
    <script type="text/javascript" src="~/Dashboard/plugins/bootstrap-markdown/js/bootstrap-markdown.js"></script>
    <script src="~/Dashboard/assets/selectize/dist/js/standalone/selectize.min.js"></script>

}

@section Functions {
    <script>
        $(document)
            .ready(function() {


                //checks if the state has a value before displaying assigned lga
                if ($('#category').val() != '') {
                    getSubCategories();
                }

                //loads assigned lga for state on change/select
                $('#category').on('change', function() { getSubCategories(); });

                //Ajax call for SUB assigned to state
                function getSubCategories() {

                    $("#sub").empty();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("GetSubForCategories", "Image")',
                        dataType: 'json',
                        data: { id: $("#category").val() },
                        success: function(sub) {

                            $.each(sub,
                                function(i, sub) {
                                    $("#sub").append('<option value="' +
                                        sub.ImageSubCategoryId +
                                        '">' +
                                        sub.Name +
                                        '</option>');
                                });
                        },
                        error: function(ex) {
                            alert('Failed to retrieve Sub-Categories.' + ex);
                        }
                    });
                }

                //Ajax ends
            });

        // Selectize plugin
        $('#input-tags').selectize({
            delimiter: ',',
            persist: false,
            create: function (input) {
                return {
                    value: input,
                    text: input
                };
            }
        });
    </script>
}